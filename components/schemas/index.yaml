ObjectId:
  $ref: './types/ObjectId.yaml'

User:
  $ref: './models/User.yaml'

Error:
  $ref: './entities/Error.yaml'

Success:
  $ref: './entities/Success.yaml'

SuccessWithData:
  $ref: './entities/SuccessWithData.yaml'

SuccessWithList:
  $ref: './entities/SuccessWithList.yaml'

Pagination:
  $ref: './entities/Pagination.yaml'

Token:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
    token:
      type: string
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

Node:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    key:
      type: string
      description: Unique key for the node
    name:
      type: string
    ip:
      type: string
    mac:
      type: string
    hostname:
      type: string
    description:
      type: string
    is_master:
      type: boolean
      description: Whether this node is the master node
    status:
      type: string
    enabled:
      type: boolean
    active:
      type: boolean
      description: Whether this node is currently active
    active_at:
      type: string
      format: date-time
      description: When this node was last active
    current_runners:
      type: integer
      description: Number of tasks currently running on this node
    max_runners:
      type: integer
      description: Maximum number of tasks that can run on this node
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time

Project:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
    description:
      type: string
    spiders:
      type: integer
      description: Number of spiders in this project
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

Spider:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
    description:
      type: string
    cmd:
      type: string
      description: Command to run the spider
    param:
      type: string
      description: Default task parameters
    priority:
      type: integer
      format: int32
    project_id:
      $ref: '#/components/schemas/ObjectId'
    col_id:
      $ref: '#/components/schemas/ObjectId'
      description: Data collection ID
    col_name:
      type: string
      description: Data collection name
    db_name:
      type: string
      description: Database name
    data_source_id:
      $ref: '#/components/schemas/ObjectId'
      description: Data source ID
    data_source:
      $ref: '#/components/schemas/Database'
      description: Data source details
    mode:
      type: string
      description: Default task mode
    node_ids:
      type: array
      items:
        $ref: '#/components/schemas/ObjectId'
      description: Default node IDs for tasks
    git_id:
      $ref: '#/components/schemas/ObjectId'
      description: Git repository ID
    git_root_path:
      type: string
      description: Root path in the Git repository
    git:
      $ref: '#/components/schemas/Git'
      description: Git repository information
    stat:
      $ref: '#/components/schemas/SpiderStat'
      description: Spider statistics
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

SpiderStat:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    last_task_id:
      $ref: '#/components/schemas/ObjectId'
      description: ID of the last task run for this spider
    last_task:
      $ref: '#/components/schemas/Task'
      description: Details of the last task
    tasks:
      type: integer
      description: Total number of tasks for this spider
    results:
      type: integer
      description: Total number of results from all tasks
    wait_duration:
      type: integer
      format: int64
      description: Total wait duration in seconds
    runtime_duration:
      type: integer
      format: int64
      description: Total runtime duration in seconds
    total_duration:
      type: integer
      format: int64
      description: Total duration in seconds
    average_wait_duration:
      type: integer
      format: int64
      description: Average wait duration in seconds
    average_runtime_duration:
      type: integer
      format: int64
      description: Average runtime duration in seconds
    average_total_duration:
      type: integer
      format: int64
      description: Average total duration in seconds
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time

Task:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    spider_id:
      $ref: '#/components/schemas/ObjectId'
    status:
      type: string
      enum: [pending, running, finished, error, cancelled]
    node_id:
      $ref: '#/components/schemas/ObjectId'
    cmd:
      type: string
      description: Command to run the task
    param:
      type: string
      description: Task parameters
    error:
      type: string
      description: Error message if task failed
    pid:
      type: integer
      description: Process ID of the running task
    schedule_id:
      $ref: '#/components/schemas/ObjectId'
      description: Schedule ID if task was created by a schedule
    type:
      type: string
      description: Type of task
    mode:
      type: string
      description: Execution mode
    priority:
      type: integer
      format: int32
      description: Task priority
    node_ids:
      type: array
      items:
        $ref: '#/components/schemas/ObjectId'
      description: List of node IDs for task execution
    stat:
      $ref: '#/components/schemas/TaskStat'
      description: Task statistics
    spider:
      $ref: '#/components/schemas/Spider'
      description: Spider details
    schedule:
      $ref: '#/components/schemas/Schedule'
      description: Schedule details
    node:
      $ref: '#/components/schemas/Node'
      description: Node details
    result_count:
      type: integer
      format: int64
    error_count:
      type: integer
      format: int64
    error_message:
      type: string
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

TaskStat:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    start_ts:
      type: string
      format: date-time
      description: When the task started
    end_ts:
      type: string
      format: date-time
      description: When the task ended
    wait_duration:
      type: integer
      format: int64
      description: Wait duration in milliseconds
    runtime_duration:
      type: integer
      format: int64
      description: Runtime duration in milliseconds
    total_duration:
      type: integer
      format: int64
      description: Total duration in milliseconds
    result_count:
      type: integer
      format: int64
      description: Number of results from the task
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time

Schedule:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
    spider_id:
      $ref: '#/components/schemas/ObjectId'
    cron:
      type: string
      description: Cron expression for schedule
    param:
      type: object
      description: Schedule parameters
    enabled:
      type: boolean
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

DependencyConfig:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
      description: Name of the dependency configuration
    type:
      type: string
      enum: [python, node]
      description: Type of dependencies (programming language)
    path:
      type: string
      description: Path to the dependency file
    file_name:
      type: string
      description: Name of the dependency file (e.g., requirements.txt, package.json)
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

DependencyRepo:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
      description: Name of the dependency repository
    url:
      type: string
      description: URL of the dependency repository
    type:
      type: string
      enum: [python, node]
      description: Type of repository
    auth_required:
      type: boolean
      description: Whether authentication is required
    username:
      type: string
      description: Username for repository authentication
    password:
      type: string
      writeOnly: true
      description: Password or token for repository authentication
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

NotificationSetting:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
      description: Name of the notification setting
    description:
      type: string
      description: Description of the notification setting
    enabled:
      type: boolean
      description: Whether this notification setting is enabled
    title:
      type: string
      description: Title of the notification
    template:
      type: string
      description: Message template for the notification
    template_mode:
      type: string
      description: Mode of the template (e.g., markdown, rich text)
    template_markdown:
      type: string
      description: Markdown template content
    template_rich_text:
      type: string
      description: Rich text template content
    template_rich_text_json:
      type: string
      description: JSON representation of rich text template
    template_theme:
      type: string
      description: Theme for the template
    task_trigger:
      type: string
      description: Task-related trigger for notification
    trigger:
      type: string
      description: General trigger for notification
    sender_email:
      type: string
      description: Email address of the sender
    use_custom_sender_email:
      type: boolean
      description: Whether to use a custom sender email
    sender_name:
      type: string
      description: Name of the sender
    mail_to:
      type: array
      items:
        type: string
      description: List of recipient email addresses
    mail_cc:
      type: array
      items:
        type: string
      description: List of CC email addresses
    mail_bcc:
      type: array
      items:
        type: string
      description: List of BCC email addresses
    channel_ids:
      type: array
      items:
        $ref: '#/components/schemas/ObjectId'
      description: IDs of notification channels to use
    channels:
      type: array
      items:
        $ref: '#/components/schemas/NotificationChannel'
      description: Notification channels (populated field, not stored)
    alert_id:
      $ref: '#/components/schemas/ObjectId'
      description: ID of associated alert
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

NotificationRequest:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    status:
      type: string
      description: Status of the notification request
    error:
      type: string
      description: Error message if the notification failed
    title:
      type: string
      description: Title of the notification
    content:
      type: string
      description: Content of the notification
    sender_email:
      type: string
      description: Email address of the sender
    sender_name:
      type: string
      description: Name of the sender
    mail_to:
      type: array
      items:
        type: string
      description: List of recipient email addresses
    mail_cc:
      type: array
      items:
        type: string
      description: List of CC email addresses
    mail_bcc:
      type: array
      items:
        type: string
      description: List of BCC email addresses
    setting_id:
      $ref: '#/components/schemas/ObjectId'
      description: ID of the associated notification setting
    channel_id:
      $ref: '#/components/schemas/ObjectId'
      description: ID of the notification channel used
    test:
      type: boolean
      description: Whether this is a test notification
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

NotificationAlert:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
      description: Name of the notification alert
    description:
      type: string
      description: Description of the notification alert
    enabled:
      type: boolean
      description: Whether this notification alert is enabled
    has_metric_target:
      type: boolean
      description: Whether this alert has a metric target
    metric_target_id:
      $ref: '#/components/schemas/ObjectId'
      description: ID of the metric target
    metric_name:
      type: string
      description: Name of the metric to monitor
    operator:
      type: string
      description: Comparison operator for the alert condition
    lasting_seconds:
      type: integer
      description: Duration in seconds the condition must be true
    target_value:
      type: number
      format: float
      description: Target value for comparison
    level:
      type: string
      description: Alert severity level
    template_key:
      type: string
      description: Key for the notification template
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

NotificationChannel:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
      description: Name of the notification channel
    description:
      type: string
      description: Description of the notification channel
    type:
      type: string
      enum: [mail, im]
      description: Type of notification channel (mail or im)
    provider:
      type: string
      enum: [gmail, outlook, yahoo, icloud, aol, zoho, qq, 163, exmail, slack, telegram, discord, ms_teams, wechat_work, dingtalk, lark]
      description: Provider of the notification channel (mail providers like gmail, outlook, etc. or IM providers like slack, telegram, etc.)
    smtp_server:
      type: string
      description: SMTP server for email notifications
    smtp_port:
      type: integer
      description: SMTP port for email notifications
    smtp_username:
      type: string
      description: SMTP username for email notifications
    smtp_password:
      type: string
      description: SMTP password for email notifications
    webhook_url:
      type: string
      description: Webhook URL for webhook notifications
    telegram_bot_token:
      type: string
      description: Telegram bot token for Telegram notifications
    telegram_chat_id:
      type: string
      description: Telegram chat ID for Telegram notifications
    google_oauth2_json:
      type: string
      description: Google OAuth2 JSON for Google-based notifications
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

Role:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
      description: Name of the role
    description:
      type: string
      description: Description of the role
    permissions:
      type: array
      items:
        type: object
        properties:
          resource:
            type: string
            description: Resource name
          actions:
            type: array
            items:
              type: string
              enum: [create, read, update, delete, execute]
      description: Permissions granted to this role
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

DataCollection:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
    fields:
      type: array
      items:
        $ref: '#/components/schemas/DataField'
    dedup:
      type: object
      properties:
        enabled:
          type: boolean
        keys:
          type: array
          items:
            type: string
        type:
          type: string
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

DataField:
  type: object
  properties:
    name:
      type: string
    type:
      type: string
    description:
      type: string

Database:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    name:
      type: string
    description:
      type: string
    data_source:
      type: string
      description: Type of database (mongodb, mysql, etc.)
    host:
      type: string
    port:
      type: integer
    uri:
      type: string
    database:
      type: string
    username:
      type: string
    password:
      type: string
      writeOnly: true
    status:
      type: string
    error:
      type: string
    active:
      type: boolean
    active_at:
      type: string
      format: date-time
    is_default:
      type: boolean
    mongo_params:
      type: object
      properties:
        auth_source:
          type: string
        auth_mechanism:
          type: string
    postgres_params:
      type: object
      properties:
        ssl_mode:
          type: string
    snowflake_params:
      type: object
      properties:
        account:
          type: string
        schema:
          type: string
        warehouse:
          type: string
        role:
          type: string
    cassandra_params:
      type: object
      properties:
        keyspace:
          type: string
    hive_params:
      type: object
      properties:
        auth:
          type: string
    redis_params:
      type: object
      properties:
        db:
          type: integer
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

Environment:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    key:
      type: string
      description: Environment variable key
    value:
      type: string
      description: Environment variable value
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

Git:
  type: object
  properties:
    _id:
      $ref: '#/components/schemas/ObjectId'
    url:
      type: string
      description: Git repository URL
    name:
      type: string
      description: Git repository name
    auth_type:
      type: string
      description: Authentication type (e.g., http, ssh)
    username:
      type: string
      description: Git username for authentication
    password:
      type: string
      writeOnly: true
      description: Git password or token for authentication
    current_branch:
      type: string
      description: Current branch of the repository
    status:
      type: string
      description: Status of the repository (e.g., cloning, pulling, error)
    error:
      type: string
      description: Error message if any
    refs:
      type: array
      items:
        $ref: '#/components/schemas/GitRef'
      description: Git references (branches, tags)
    refs_updated_at:
      type: string
      format: date-time
      description: When refs were last updated
    clone_logs:
      type: array
      items:
        type: string
      description: Logs from the clone operation
    auto_pull:
      type: boolean
      description: Whether to automatically pull before running tasks
    created_at:
      type: string
      format: date-time
    updated_at:
      type: string
      format: date-time
    created_by:
      $ref: '#/components/schemas/ObjectId'
    updated_by:
      $ref: '#/components/schemas/ObjectId'

GitRef:
  type: object
  properties:
    name:
      type: string
      description: Reference name
    type:
      type: string
      description: Reference type (branch, tag)
    hash:
      type: string
      description: Git commit hash

MetricTrend:
  type: object
  properties:
    key:
      type: string
      description: Unique key for the metric
    name:
      type: string
      description: Display name of the metric
    max:
      type: number
      format: double
      description: Maximum value in the trend
    min:
      type: number
      format: double
      description: Minimum value in the trend
    avg:
      type: number
      format: double
      description: Average value in the trend
    data:
      type: array
      items:
        type: number
        format: double
      description: Series of data points
