get:
  operationId: getGitList
  tags:
    - Git
  summary: Get list of Git repositories
  description: Lists all Git repositories configured in the system
  parameters:
    - $ref: '../../components/parameters/PageParam.yaml'
    - $ref: '../../components/parameters/SizeParam.yaml'
    - $ref: '../../components/parameters/AllParam.yaml'
  responses:
    '200':
      description: List of Git repositories
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../components/schemas/entities/SuccessWithList.yaml'
              - type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '../../components/schemas/models/Git.yaml'
post:
  operationId: createGit
  tags:
    - Git
  summary: Create a new Git repository
  description: Add a new Git repository to the system
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - url
          properties:
            name:
              type: string
              description: Name of the Git repository
            url:
              type: string
              description: URL of the Git repository
            auth_type:
              type: string
              enum: [none, http, ssh]
              description: Authentication type for the Git repository
            username:
              type: string
              description: Username for HTTP authentication
            password:
              type: string
              description: Password/token for HTTP authentication
            ssh_key:
              type: string
              description: SSH private key for SSH authentication
            ssh_password:
              type: string
              description: SSH key password if the key is password-protected
  responses:
    '200':
      description: Git repository created successfully
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/entities/Success.yaml'
delete:
  operationId: deleteGits
  tags:
    - Git
  summary: Delete multiple Git repositories
  description: Delete multiple Git repositories by IDs
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - ids
          properties:
            ids:
              type: array
              items:
                $ref: '../../components/schemas/types/ObjectId.yaml'
  responses:
    '200':
      description: Git repositories deleted successfully
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/entities/Success.yaml' 