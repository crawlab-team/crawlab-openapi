get:
  operationId: getUserById
  tags:
    - Users
  summary: Get user by ID
  parameters:
    - $ref: '../../components/parameters/IdParam.yaml'
  responses:
    '200':
      description: User details
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../components/schemas/entities/SuccessWithData.yaml'
              - type: object
                properties:
                  data:
                    $ref: '../../components/schemas/models/User.yaml'
    '404':
      description: User not found
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/entities/Error.yaml'
put:
  operationId: updateUserById
  tags:
    - Users
  summary: Update user by ID
  parameters:
    - $ref: '../../components/parameters/IdParam.yaml'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/models/User.yaml'
  responses:
    '200':
      description: User updated successfully
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../../components/schemas/entities/SuccessWithData.yaml'
              - type: object
                properties:
                  data:
                    $ref: '../../components/schemas/models/User.yaml'
    '404':
      description: User not found
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/entities/Error.yaml'
delete:
  operationId: deleteUserById
  tags:
    - Users
  summary: Delete user by ID
  parameters:
    - $ref: '../../components/parameters/IdParam.yaml'
  responses:
    '200':
      description: User deleted successfully
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/entities/Success.yaml'
    '404':
      description: User not found
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/entities/Error.yaml'
